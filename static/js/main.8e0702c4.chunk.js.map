{"version":3,"sources":["images/preloader.gif","components/API/API.jsx","App.module.css","Redux/auth-reducer.js","components/validation/Validation.js","components/Music/Music.jsx","components/FriendsList/FriendsList.js","Redux/correspondense-reducer.jsx","components/Correspondense/DialogItem/DialogsItem.jsx","components/Correspondense/Message/Message.jsx","components/Correspondense/DialogTextareaForm/DialogTextareaForm.jsx","components/Correspondense/Correspondense.jsx","components/Correspondense/CorrespondenseContainer.jsx","components/Header/Header.jsx","Redux/profile-selectors.js","Redux/auth-selectors.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","Redux/app-reducer.js","Redux/redux-store.js","components/hoc/LazyLoadHoc.jsx","components/Navigation/Navigation.jsx","components/Navigation/NavigationWrapper.jsx","components/Navigation/NavigationContainer.jsx","components/News/News.jsx","components/News/NewsContainer.jsx","components/Settings/Settings.jsx","components/Settings/SettingsContainer.jsx","App.js","serviceWorker.js","index.js","Redux/profile-reducer.jsx","components/Common/UserPhoto/UserPhoto.jsx","components/hoc/AuthRedirectComponent.jsx","Redux/users-reducer.js","components/Common/FormControl/FormsSimplification.jsx","components/Common/Preloader/Preloader.jsx"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","toUnFollowRequest","userId","delete","toFollowRequest","post","toLogin","getUserProfile","userID","profileAPI","sendStatus","status","put","getUsersStatus","sendPhoto","photoToSend","sendProfileInfo","info","authAPI","authorization","email","password","rememberMe","deAuthorization","usersData","login","isAuth","isInitialized","setAuthUserData","type","setAuthUserDataThunkCreator","dispatch","id","toAuthUserDataThunkCreator","userFormData","a","resultCode","action","stopSubmit","_error","toLogout","toCheckInitializationForProfile","promise","getUserProfileThunkCreatorr","Promise","all","authRD","state","fieldRequired","value","maxLengthCreator","maxLength","length","Music","props","store","getState","to","FriendsList","initialCorrespondense","correspondence","conversationData","name","messagesData","message","correspondense","dialogForm","DialogItem","path","className","c","item","active","Message","maxLength20","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","FormsSimplification","validate","TextareaDialog","formdata","addCorrespondenseClickCreator","Correspondense","Dialogs","conversations","map","d","key","Messages","messages","m","style","wrapper","messages_wrapper","toWriteMessageTextareaButton","compose","connect","AuthRedirectComponent","Header","header","container","isLogin_wrapper","imgg","login_block","login_word","header_photo","UserPhoto","singleProfile","photos","large","onClick","getSingleProfile","profileRD","getIsInitialized","getUserId","getLogin","HeaderContainer","this","React","Component","LoginReduxForm","FieldSimple","Input","error","form_summary_error","logIn","Login","formLoginWrapper","LoginContainer","withRouter","appData","appRD","reducers","combineReducers","reduceUsers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","LazyLoadHocComponent","fallback","menu","menuActive","nav","points","p","chosenPoint","changeChosenPoint","link","nav_wrapper","profile","nickname","check_mark","NavigationContainer","setState","News","newsWrapper","string","NewsContiner","maxLength30","SettingsReduxForm","settingsWrapper","yourName","settingsSingleForm","fullName","lookingForAJob","contacts","FieldSimpleSettings","submitWrapper","ChangeSettings","formSettingsWrapper","accountOptions","sendUserProfileInfoTC","SettingsContainer","UsersContainer","lazy","ProfileContainer","App","setInitializedThunkCreator","render","CorrespondenseContainer","Preloader","AppContainer","SocialNetworkApp","basename","process","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","initialProfile","posts","posti","ILikeIt","addPostActionCreatorr","text","setUserProfileInfo","toChangePhoto","photo","FormData","append","setAuthUserPhoto","file","getUsersStatusThunkCreator","sendUsersStatusThunkCreator","AboutMe","lookingForAJobDescription","github","vk","facebook","instagram","twitter","website","youtube","mainLink","postForm","filter","postId","small","profileProps","useState","setUserPhoto","useEffect","thePhoto","src","users","totalUsersCount","isFetching","isButtonPressed","toFollowUnfollow","toUpdateUsers","changePage","pageId","setFetching","setButtonPressed","isTueFalse","getUsersThunkCreator","page","items","number","totalCount","newPageGetUsers","pageNumber","followThunkCreator","usersId","isFollowed","u","followed","ControlForm","input","meta","child","hasError","touched","formControlWrapper","formControl","children","restProps","WhetherFieldRequired","simpleField","preloaderPict"],"mappings":"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","file":"static/js/main.8e0702c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.114a6d05.gif\";","import * as axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"b891edb4-172f-4673-a388-0183624ea4a0\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize)  {\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => {\r\n                        return response.data\r\n                    }\r\n                ))\r\n    },\r\n    toUnFollowRequest( userId ) {\r\n        return (\r\n            instance.delete(`follow/` + userId)\r\n                .then(response => {\r\n                        return response.data\r\n                    }\r\n                )\r\n        )\r\n    },\r\n    toFollowRequest( userId ) {\r\n        return (\r\n            instance.post(`follow/` + userId, {})\r\n                .then(response => {\r\n                        return response.data\r\n                    }\r\n                )\r\n        )\r\n    },\r\n    toLogin() {\r\n        return (\r\n            instance.get(`auth/me`)\r\n                .then(response => {\r\n                    return  response.data.data;\r\n                })\r\n        )\r\n    },\r\n    getUserProfile( userID ) {\r\n        return profileAPI.getUserProfile(userID)\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getUserProfile( userID ) {\r\n        return (\r\n            instance.get(`profile/` + userID)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    sendStatus( status ) {\r\n        return (\r\n            instance.put('profile/status/', {status: status})\r\n        )\r\n    },\r\n    getUsersStatus( userId ) {\r\n        return (\r\n            instance.get('profile/status/' + userId)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    sendPhoto( photoToSend ) {\r\n        return (\r\n            instance.put('/profile/photo', photoToSend, { // существует несколько форматов отправки файлов\r\n                headers: {                              // для отправки картинки или иного не txt файла используется формат 'multipart/form-data'\r\n                    'Content-Type': 'multipart/form-data' // для того что бы отправить в этом формате необходимо создать объект FormData при помощи\r\n                }                                       // следующего кода formData = new FormData(название, файл) - внутри скобочек указываем 1. Название файла который мы отправляем 2. Вкладываем сам файл\r\n            })\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    sendProfileInfo( info ) {\r\n        debugger\r\n        return (\r\n            instance.put('/profile', info)\r\n                .then(response => {\r\n                    debugger\r\n                    return response.data\r\n                })\r\n        )\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    authorization( email, password, rememberMe ) {\r\n        return (\r\n            instance.post(`auth/login?email=${email}&password=${password}&rememberMe=${rememberMe}`, {})\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    deAuthorization() {\r\n        return (\r\n            instance.delete(`auth/login/`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__34qx_\",\"header\":\"App_header__iaITM\",\"isLogin_wrapper\":\"App_isLogin_wrapper__2PSPg\",\"imgg\":\"App_imgg__3HBnv\",\"login_block\":\"App_login_block__3uLEk\",\"login_word\":\"App_login_word__39YVQ\",\"header_photo\":\"App_header_photo__2YsSx\",\"thePhoto\":\"App_thePhoto__16NRJ\",\"formSettingsWrapper\":\"App_formSettingsWrapper__3334h\",\"accountOptions\":\"App_accountOptions__3hIHm\",\"settingsWrapper\":\"App_settingsWrapper__19KgP\",\"yourName\":\"App_yourName__2jVTd\",\"settingsSingleForm\":\"App_settingsSingleForm__2U6ZU\",\"formControlWrapper\":\"App_formControlWrapper__2aq8c\",\"error\":\"App_error__3yFlS\",\"formControl\":\"App_formControl__2AHmU\",\"submitWrapper\":\"App_submitWrapper__p5o9g\",\"nav_wrapper\":\"App_nav_wrapper__Nrgze\",\"nav\":\"App_nav__28W70\",\"menuActive\":\"App_menuActive__qSIgH\",\"nickname\":\"App_nickname__RXXLZ\",\"check_mark\":\"App_check_mark__1xie3\",\"formLoginWrapper\":\"App_formLoginWrapper__3QvYt\",\"usersContainer\":\"App_usersContainer__2w68K\",\"string\":\"App_string__26Fs2\",\"wrapper\":\"App_wrapper__1cCzP\",\"breakdown\":\"App_breakdown__2FQBm\",\"paginatorContainer\":\"App_paginatorContainer__3PW9u\",\"selectedPage\":\"App_selectedPage__sF5KX\",\"unselected_page\":\"App_unselected_page__3hgxj\",\"profile_wrapper\":\"App_profile_wrapper__pChPu\",\"myPosts_wrapper\":\"App_myPosts_wrapper__e_zND\",\"messageTitle\":\"App_messageTitle__2iw5k\",\"formWrapper\":\"App_formWrapper__S9auz\",\"formError\":\"App_formError__1Rs5u\",\"profile_info\":\"App_profile_info__3Msxz\",\"place_for_photo\":\"App_place_for_photo__1prq6\",\"your_profiles_wrapper\":\"App_your_profiles_wrapper__1QXQp\",\"full_name\":\"App_full_name__alOHI\",\"contacts_inner\":\"App_contacts_inner__2kcUa\",\"contacts\":\"App_contacts__1zaGU\",\"social_networks_wrapper\":\"App_social_networks_wrapper__2FgiD\",\"network\":\"App_network__RDCd3\",\"searching_for_work\":\"App_searching_for_work__DAC5U\",\"sliderWrapper\":\"App_sliderWrapper__2hI6x\",\"myWorksTitle\":\"App_myWorksTitle__3LIqI\",\"fancyBoxPassive\":\"App_fancyBoxPassive__2nUIz\",\"fancyBoxActive\":\"App_fancyBoxActive__Y3uQi\",\"fancyBoxFlexWrapper\":\"App_fancyBoxFlexWrapper__3qNX1\",\"slick-slider\":\"App_slick-slider__iu3ZC\",\"slick-arrow\":\"App_slick-arrow__2JwSG\",\"slick-prev\":\"App_slick-prev__1FgcB\",\"slick-next\":\"App_slick-next__vZZaM\",\"fancySliderPicture\":\"App_fancySliderPicture__1889X\",\"thePicture\":\"App_thePicture__21y1N\",\"myWorkHover\":\"App_myWorkHover__2TERV\",\"singlePost\":\"App_singlePost__34iDy\",\"likesWrapper\":\"App_likesWrapper__1mz4X\",\"likes\":\"App_likes__Yfhbq\",\"img\":\"App_img__tt9Mb\"};","import React from \"react\";\r\nimport {authAPI, profileAPI, usersAPI} from \"../components/API/API\";\r\nimport {stopSubmit} from \"redux-form\"\r\nimport {getUserProfileThunkCreatorr, setUsersStatus} from \"./profile-reducer\";\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\nconst LOGOUT_USER_DATA = 'LOGOUT-USER-DATA';\r\nconst IS_INITIALIZED = 'IS-INITIALIZED';\r\n\r\n\r\nlet usersData = {\r\n\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n\r\n    isAuth: false,\r\n    isInitialized: false\r\n\r\n};\r\n\r\nconst  authRD = (state = usersData, action) => {\r\n\r\n    let stateCopy;\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            stateCopy = {\r\n                ...state,\r\n                ...action.data\r\n            };\r\n            return stateCopy;\r\n\r\n        case LOGOUT_USER_DATA:\r\n            stateCopy = {\r\n                ...state,\r\n                userId: null,\r\n                email: null,\r\n                login: null,\r\n                isAuth: false\r\n            };\r\n            return stateCopy;\r\n\r\n        case IS_INITIALIZED:\r\n            stateCopy = {\r\n                ...state,\r\n                isInitialized: true\r\n            };\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setAuthUserData = ( userId, login, email, isAuth ) => ({ type: SET_USER_DATA, data: {userId, login, email, isAuth} });\r\nexport const initializedSuccess = () => ({ type: IS_INITIALIZED });\r\n\r\n\r\n\r\nexport const setAuthUserDataThunkCreator = () => (dispatch) => {\r\n\r\n\r\n        return usersAPI.toLogin().then(data => {\r\n            if (data.email) {\r\n                let {id, login, email} = data;\r\n                dispatch(setAuthUserData(id, login, email, true));\r\n            }\r\n        });\r\n\r\n};\r\n\r\nexport const toAuthUserDataThunkCreator = ( userFormData ) => async (dispatch) => {\r\n\r\n    let { email, password, rememberMe = true } = userFormData;\r\n    let data = await authAPI.authorization( email, password, rememberMe ); // ждем ответа на асинхронный запрос\r\n    if (data.resultCode === 0) {\r\n\r\n        data = await usersAPI.toLogin();\r\n\r\n        if (data.email) {\r\n            let {id, login, email} = data;\r\n            dispatch(setAuthUserData(id, login, email, true));\r\n        }\r\n    } else {\r\n        let action = stopSubmit('login', {_error: \"Введены не верные данные\"}); // если введены не правильные данные то выведет ошибку\r\n        dispatch(action);\r\n    }\r\n};\r\n\r\nexport const toLogout = () => async (dispatch) => {\r\n    authAPI.deAuthorization().then(data => {\r\n        if (data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    })\r\n};\r\n\r\nexport const toCheckInitializationForProfile = ( userId ) => async (dispatch) => {\r\n    let promise = dispatch(getUserProfileThunkCreatorr(userId));\r\n    await Promise.all([promise]);\r\n    dispatch(initializedSuccess());\r\n\r\n\r\n};\r\n\r\nexport default authRD;","export const fieldRequired = value => {\r\n    if (value) return undefined;\r\n    return \"Введите пожалуйста текст\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `maximum size is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from 'react';\r\nimport classes from '../../App.module.css';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Music = (props) => {\r\n\r\n    if (props.store.getState().authRD.isAuth == false) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n        <div>\r\n            Здесь будут новости\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport style from './FriendsList.module.css';\r\nimport SingleFriend from \"./SingleFriend/SingleFriend\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst FriendsList = (props) => {\r\n\r\n    /*let SingleFrinedd = props.name.map( f => <SingleFriend name={f.name} id={f.id} /> );*/\r\n    if (props.store.getState().authRD.isAuth == false) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n        <div>\r\n            {/*{SingleFrinedd}*/}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FriendsList;","const CORRESPONDENSE_DYNAMIC_CHANGE = 'CORRESPONDENSE_DYNAMIC_CHANGE'\r\nconst CORRESPONDENSE_STATIC_CHANGE = 'CORRESPONDENSE_STATIC_CHANGE'\r\n\r\n\r\nlet initialCorrespondense = {\r\n    correspondence: {\r\n        conversationData: [\r\n            {id: 1, name: 'Dimych'},\r\n            {id: 2, name: 'Vitek'},\r\n            {id: 3, name: 'Sveta'},\r\n            {id: 4, name: 'Valera'},\r\n        ],\r\n        messagesData: [\r\n            {id: 1, message: \"how is your it-kamasutra\"},\r\n            {id: 2, message: \"why\"},\r\n            {id: 3, message: \"yo\"},\r\n        ]\r\n    },\r\n};\r\n\r\n\r\nconst correspondense = (state = initialCorrespondense, action) => {\r\n\r\n    let stateCopy;\r\n    switch (action.type) {\r\n\r\n        case CORRESPONDENSE_STATIC_CHANGE:\r\n            stateCopy = {\r\n                ...state,\r\n                correspondence: {\r\n                    conversationData: [...state.correspondence.conversationData],\r\n                    messagesData: [...state.correspondence.messagesData, {id: 5, message: action.message.dialogForm}] // добавление текста из того, что находится в хранилище\r\n                }\r\n            };\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addCorrespondenseClickCreator = ( message ) => ({ type: CORRESPONDENSE_STATIC_CHANGE, message }) // сопоставление \"пароля\" для реализации кода\r\n\r\nexport default correspondense","import React from 'react';\r\nimport c from '../../../App.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/Correspondense/\" + props.id\r\n    return (\r\n        <div className={c.item + ' ' + c.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport c from '../../../App.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={c.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {fieldRequired, maxLengthCreator} from \"../../validation/Validation\";\r\nimport {FormsSimplification} from \"../../Common/FormControl/FormsSimplification\";\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\nconst DialogForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder={'Введите Ваш текст'}\r\n                   name={'dialogForm'}\r\n                   component={FormsSimplification}\r\n                   validate={[fieldRequired, maxLength20]}\r\n            />\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n\r\n};\r\n\r\nconst DialogReduxForm = reduxForm({form: 'dialog'})(DialogForm);\r\n\r\nconst TextareaDialog = (props) => {\r\n\r\n    const onSubmit = (formdata) => {\r\n        props.addCorrespondenseClickCreator(formdata)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <DialogReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TextareaDialog","import React from 'react';\r\nimport style from '../../App.module.css';\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport TextareaDialog from \"./DialogTextareaForm/DialogTextareaForm\";\r\n\r\nconst Correspondense = (props) => {\r\n\r\n    let Dialogs = props.conversations.map( d => <DialogItem name={d.name} id={d.id} key={d.id} /> );\r\n    let Messages = props.messages.map( m => <Message message={m.message} id={m.id} key={m.id} /> );\r\n\r\n    return (\r\n        <div className={style.correspondense}>\r\n           <div className={style.wrapper}>\r\n               {Dialogs}\r\n           </div>\r\n           <div className={style.messages}>\r\n               <div className={style.messages_wrapper}>\r\n                    {Messages}\r\n               </div>\r\n               <div className={style.toWriteMessageTextareaButton}>\r\n                   <TextareaDialog addCorrespondenseClickCreator={props.addCorrespondenseClickCreator} />\r\n               </div>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Correspondense;","import React from 'react';\r\nimport correspondense, {addCorrespondenseClickCreator} from \"../../Redux/correspondense-reducer\";\r\nimport Correspondense from \"./Correspondense\";\r\nimport {connect} from 'react-redux';\r\nimport {AuthRedirectComponent} from \"../hoc/AuthRedirectComponent\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = ( state ) => {\r\n    return {\r\n        conversations: state.correspondense.correspondence.conversationData,\r\n        messages: state.correspondense.correspondence.messagesData,\r\n        isAuth: state.authRD.isAuth\r\n    }\r\n};\r\n\r\nexport default compose (\r\n    connect( mapStateToProps, {addCorrespondenseClickCreator} ),\r\n    AuthRedirectComponent\r\n)(Correspondense);","import React from 'react';\r\nimport style from '../../App.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport UserPhoto from \"../Common/UserPhoto/UserPhoto\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n    <header className={style.header}>\r\n        <div className={style.container}>\r\n            <div className={style.isLogin_wrapper}>\r\n                <div className={style.imgg}></div>\r\n                <div className={style.login_block}>\r\n                    {props.isAuth ? <span>{props.login}</span> : <NavLink to={'/login'} className={style.login_word}>Войти</NavLink>}\r\n                    <div className={style.header_photo}>\r\n                        {props.isInitialized && UserPhoto(props.singleProfile.photos.large) }\r\n                    </div>\r\n                    {props.isAuth ? <button onClick={props.toLogout}>Выйти</button> : \"\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const getSingleProfile = ( state ) => {\r\n    return state.profileRD.singleProfile\r\n};\r\n\r\nexport const getFullName = ( state ) => {\r\n    return state.profileRD.singleProfile.fullName\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const getIsInitialized = ( state ) => {\r\n    return state.authRD.isInitialized\r\n};\r\n\r\nexport const getUserId = ( state ) => {\r\n    return state.authRD.userId\r\n};\r\n\r\nexport const getLogin = ( state ) => {\r\n    return state.authRD.login\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {toLogout} from \"../../Redux/auth-reducer\";\r\nimport {getSingleProfile} from \"../../Redux/profile-selectors\";\r\nimport {getIsInitialized} from \"../../Redux/auth-selectors\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header\r\n                {...this.props}\r\n                singleProfile={this.props.singleProfile}\r\n                isInitialized={this.props.isInitialized}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authRD.isAuth,\r\n        login: state.authRD.login,\r\n        isInitialized: getIsInitialized(state),\r\n        singleProfile: getSingleProfile(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {toLogout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {fieldRequired, maxLengthCreator} from \"../validation/Validation\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from '../../App.module.css'\r\nimport {FieldSimple, Input} from \"../Common/FormControl/FormsSimplification\";\r\n\r\nconst maxLength20 = maxLengthCreator(30);\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {FieldSimple('email', 'email', Input, fieldRequired, maxLength20)}\r\n            {FieldSimple('name', 'password', Input, fieldRequired, maxLength20)}\r\n            {/*{FieldSimple(\"\", \"rememberMe\", \"input\", fieldRequired, maxLength20, {type: \"checkbox\"}, \"remember me\")}*/}\r\n            {/*<div>\r\n                <Field type={'checkbox'} name={'rememberMe'} component={'input'} /> remember me //////////// П Р И М Е Р\r\n            </div>*/}\r\n            { props.error &&\r\n            <div className={style.form_summary_error}>\r\n                {props.error}\r\n            </div>\r\n             }\r\n            <div className={style.logIn}>\r\n                <button>Авторизоваться</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formdata) => {\r\n        props.toAuthUserDataThunkCreator(formdata)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile/:userID\"} />\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.formLoginWrapper}>\r\n            <h1>Зарегистрируйтесь пожалуйста</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Login","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {toAuthUserDataThunkCreator} from \"../../Redux/auth-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Login toAuthUserDataThunkCreator={this.props.toAuthUserDataThunkCreator}\r\n                   isAuth={this.props.isAuth}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authRD.isAuth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect( mapStateToProps, {toAuthUserDataThunkCreator} ),\r\n    withRouter\r\n)(LoginContainer);","import React from \"react\";\r\nimport {setAuthUserDataThunkCreator} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED = 'INITIALIZED';\r\n\r\n\r\nlet appData = {\r\n\r\n    isInitialized: false,\r\n\r\n};\r\n\r\nconst  appRD = (state = appData, action) => {\r\n\r\n    let stateCopy;\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED:\r\n            stateCopy = {\r\n                ...state,\r\n                isInitialized: true\r\n            };\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setInitializedSuccess = () => ({ type: INITIALIZED });\r\n\r\nexport const setInitializedThunkCreator = () => async (dispatch) => {\r\n\r\n\r\n\r\n        let promise = dispatch(setAuthUserDataThunkCreator());\r\n\r\n        await Promise.all([promise])\r\n\r\n        dispatch(setInitializedSuccess())\r\n\r\n\r\n        /*return (dispatch) => {\r\n            usersAPI.toLogin().then(data => {\r\n                if (data.email) {\r\n                    let {id, login, email} = data;\r\n                    dispatch(setAuthUserData(id, login, email));\r\n                }\r\n            })\r\n        }*/\r\n};\r\n\r\n\r\n\r\n\r\nexport default appRD;","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport correspondense from \"./correspondense-reducer\";\r\nimport reduceUsers from \"./users-reducer\";\r\nimport profileRD from \"./profile-reducer\";\r\nimport authRD from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport appRD from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profileRD,\r\n    correspondense,\r\n    reduceUsers,\r\n    authRD,\r\n    form: formReducer,\r\n    appRD\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\nwindow.store = store;\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\n\r\n\r\nexport const LazyLoadHocComponent = (Component) => {\r\n\r\n    const LazyComponent = (props) => {\r\n\r\n        return <Suspense fallback={<h1>Loading profile...</h1>}>\r\n                <Component />\r\n               </Suspense>\r\n\r\n\r\n    };\r\n\r\n    return LazyComponent\r\n\r\n};","import React from 'react';\nimport style from '../../App.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nconst Navigation = ( props ) => {\n\n        let menu = style.menu;\n        let menuActive = style.menuActive;\n\n        let changeChoosePoint = ( id ) => {\n            props.changeChosenPoint( id )\n        };\n\n        return (\n\n            <nav className={style.nav}>\n                { props.points.map( p =>\n                    <div className={ p.id === props.chosenPoint ? menuActive : menu } key={p.id} onClick={() => {changeChoosePoint(p.id)}}>\n                        <NavLink to={p.link}>{p.name}</NavLink>\n                    </div>\n                ) }\n            </nav>\n\n\n\n                /*<div className={menu}> // П Р И М Е Р\n                    <NavLink to={\"/profile/7398\"}>Профиль</NavLink> // П Р И М Е Р\n                </div> // П Р И М Е Р\n                <div className={menu}> // П Р И М Е Р\n                    <NavLink to={\"/correspondense\"}>Messages</NavLink> // П Р И М Е Р\n                </div> // П Р И М Е Р\n                <div className={menu}> // П Р И М Е Р\n                    <NavLink to=\"/users\">Пользователи</NavLink> // П Р И М Е Р\n                </div> // П Р И М Е Р\n                <div className={menu}> // П Р И М Е Р\n                    <NavLink to=\"/news\">Новости</NavLink> // П Р И М Е Р\n                </div> // П Р И М Е Р\n                <div className={menu}> // П Р И М Е Р\n                    <NavLink to=\"/music\">Музыка</NavLink> // П Р И М Е Р\n                </div> // П Р И М Е Р\n                <div className={menu}> // П Р И М Е Р\n                    <NavLink to=\"/settings\">Настройки</NavLink> // П Р И М Е Р\n                </div> // П Р И М Е Р\n                <div className={menu}> // П Р И М Е Р\n                    <NavLink to=\"/friendsList\">Список друзей</NavLink> // П Р И М Е Р\n                </div>*/ // П Р И М Е Р\n\n\n        )\n};\n\n\n\nexport default compose()(Navigation);","import React from 'react';\r\nimport style from '../../App.module.css';\r\nimport {compose} from \"redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserPhoto from \"../Common/UserPhoto/UserPhoto\";\r\n\r\n\r\nconst NavigationWrapper = ( props ) => {\r\n\r\n        let login = <span>{props.login}</span>;\r\n\r\n        return (\r\n\r\n            <nav className={style.nav_wrapper}>\r\n                { props.isInitialized && UserPhoto(props.profile.photos.large) }\r\n                <div className={style.nickname}>\r\n                        { props.isInitialized && login }\r\n                        <div className={style.check_mark}></div>\r\n                </div>\r\n                <Navigation\r\n                    points={ props.points }\r\n                    chosenPoint={ props.chosenPoint }\r\n                    changeChosenPoint={ props.changeChosenPoint }\r\n                />\r\n            </nav>\r\n\r\n        )\r\n};\r\n\r\n\r\n\r\nexport default compose()(NavigationWrapper);","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport NavigationWrapper from \"./NavigationWrapper\";\nimport {toCheckInitializationForProfile} from \"../../Redux/auth-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {getSingleProfile} from \"../../Redux/profile-selectors\";\nimport {getIsInitialized, getLogin, getUserId} from \"../../Redux/auth-selectors\";\n\n\nclass NavigationContainer extends React.Component {\n\n    state = {\n      points: [\n          { id: 1, link: \"/profile/7398\", name: \"Профиль\" },\n          { id: 2, link: \"/users\", name: \"Пользователи\" },\n          { id: 3, link: \"/news\", name: \"Новости\" },\n          { id: 4, link: \"/music\", name: \"Музыка\" },\n          { id: 5, link: \"/settings\", name: \"Настройки\" },\n          { id: 6, link: \"/friendsList\", name: \"Список друзей\" }\n      ],\n      chosenPoint: 1\n    };\n\n    changeChosenPoint = ( id ) => {\n        this.setState({\n            chosenPoint: id\n        })\n    };\n\n    render() {\n\n        return (\n            <NavigationWrapper\n                profile={this.props.profile}\n                isInitialized={this.props.isInitialized}\n                login={this.props.login}\n                points={this.state.points}\n                chosenPoint={this.state.chosenPoint}\n                changeChosenPoint={this.changeChosenPoint}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = ( state ) => {\n    return {\n        profile: getSingleProfile(state),\n        isInitialized: getIsInitialized(state),\n        userId: getUserId(state),\n        login: getLogin(state)\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {toCheckInitializationForProfile}),\n    withRouter\n)(NavigationContainer);","import React from 'react';\r\nimport style from \"../../App.module.css\"\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst News = (props) => {\r\n\r\n    return (\r\n        <div className={style.newsWrapper}>\r\n            <div>Новости</div>\r\n            <div className={style.string}></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport News from \"./News\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthRedirectComponent} from \"../hoc/AuthRedirectComponent\";\r\n\r\n\r\nclass NewsContiner extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <News />\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = ( state ) => {\r\n\r\n    return {\r\n\r\n    }\r\n\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {})\r\n)(NewsContiner);","import React from 'react';\r\nimport style from '../../App.module.css';\r\nimport {FieldSimple, FieldSimpleSettings, Input} from \"../Common/FormControl/FormsSimplification\";\r\nimport {fieldRequired, maxLengthCreator} from \"../validation/Validation\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst Settings = (props) => {\r\n\r\n    return (\r\n        <div className={style.settingsWrapper}>\r\n            <div className={style.yourName}>\r\n                <form onSubmit={props.handleSubmit}>\r\n                    <div className={style.settingsSingleForm}>\r\n                        <span className={style.fullName}>Введите Ваше полное ммя</span>\r\n                        {FieldSimple('Введите Ваше полное имя', 'fullName', Input, fieldRequired, maxLength30)}\r\n                    </div>\r\n                    <div className={style.settingsSingleForm}>\r\n                        <span className={style.lookingForAJob}>Введите какую работу Вы ищете</span>\r\n                        {FieldSimple('Опишите работу которую ищете', 'lookingForAJobDescription', Input, fieldRequired, maxLength30)}\r\n                    </div>\r\n                    <div className={style.settingsSingleForm}>\r\n                        <span className={style.contacts}>Укажите Ваши контактные данные в сети</span>\r\n                        {FieldSimpleSettings('Github', 'github', Input)}\r\n                        {FieldSimpleSettings('Vk', 'vk', Input)}\r\n                        {FieldSimpleSettings('Facebook', 'facebook', Input)}\r\n                        {FieldSimpleSettings('Instagram', 'instagram', Input)}\r\n                        {FieldSimpleSettings('Twitter', 'twitter', Input)}\r\n                        {FieldSimpleSettings('Website', 'website', Input)}\r\n                        {FieldSimpleSettings('Youtube', 'youtube', Input)}\r\n                        {FieldSimpleSettings('MainLink', 'mainLink', Input)}\r\n                    </div>\r\n                    <div className={style.submitWrapper}>\r\n                        <button>Отправить</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst SettingsReduxForm = reduxForm({form: 'settings'})(Settings);\r\n\r\nconst ChangeSettings = (props) => {\r\n\r\n    const onSubmit = (formdata) => {\r\n        debugger\r\n        props.sendUserProfileInfoTC(formdata, props.userId)\r\n\r\n    };\r\n\r\n    return (\r\n        <div className={style.formSettingsWrapper}>\r\n            <span className={style.accountOptions}>Настройки аккаунта</span>\r\n            <SettingsReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ChangeSettings;\r\n","import React from 'react';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport ChangeSettings from \"./Settings\";\r\nimport {sendUserProfileInfoTC} from \"../../Redux/profile-reducer\";\r\nimport {getUserId} from \"../../Redux/auth-selectors\";\r\n\r\n\r\n\r\nclass SettingsContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <ChangeSettings\r\n                sendUserProfileInfoTC={this.props.sendUserProfileInfoTC}\r\n                userId={this.props.userId}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n\r\n    return {\r\n        userId: getUserId(state)\r\n    }\r\n\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendUserProfileInfoTC})\r\n)(SettingsContainer);","import React, {Suspense} from 'react';\r\nimport style from './App.module.css';\r\nimport Music from \"./components/Music/Music\";\r\nimport FriendsList from \"./components/FriendsList/FriendsList\";\r\nimport CorrespondenseContainer from \"./components/Correspondense/CorrespondenseContainer\";\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginContainer from \"./components/Login/LoginContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {setInitializedThunkCreator} from \"./Redux/app-reducer\";\r\nimport Preloader from \"./components/Common/Preloader/Preloader\";\r\nimport store from './Redux/redux-store';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {LazyLoadHocComponent} from \"./components/hoc/LazyLoadHoc\";\r\nimport NavigationContainer from \"./components/Navigation/NavigationContainer\";\r\nimport {toCheckInitializationForProfile} from \"./Redux/auth-reducer\";\r\nimport NewsContiner from \"./components/News/NewsContainer\";\r\nimport SettingsContainer from \"./components/Settings/SettingsContainer\";\r\n\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer')); // Lazy-loaded\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer')); // Lazy-loadedss\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = 7398;\r\n        this.props.toCheckInitializationForProfile( userId );\r\n        this.props.setInitializedThunkCreator();\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.isInitialized) {\r\n            return <Preloader />\r\n        }\r\n\r\n        return (\r\n\r\n            <body>\r\n\r\n            <HeaderContainer\r\n                store={this.props.store}\r\n            />\r\n            <div className={style.container}>\r\n                <NavigationContainer\r\n                    store={this.props.store}\r\n                />\r\n                <Route path='/correspondense'\r\n                       render={ () =>\r\n                           <CorrespondenseContainer\r\n                               store={ this.props.store }\r\n                           />\r\n                       }\r\n                />\r\n                <Route path='/profile/:userID?'\r\n                       render={ LazyLoadHocComponent(ProfileContainer) }/>\r\n\r\n                <Route path='/users'\r\n                       render={ LazyLoadHocComponent(UsersContainer) }/>\r\n\r\n                <Route path='/login'\r\n                       render={ () => <LoginContainer\r\n                           store={ this.props.store }\r\n                       />\r\n                       }\r\n                />\r\n                <Route path='/news'\r\n                       render={ () => <NewsContiner\r\n                           store={ this.props.store }\r\n                       />\r\n                       }\r\n                />\r\n                <Route path='/music'\r\n                       render={ () => <Music\r\n                           store={ this.props.store }\r\n                       />\r\n                       }\r\n                />\r\n                <Route path='/settings'\r\n                       render={ () => <SettingsContainer\r\n                           store={ this.props.store }\r\n                       />\r\n                       }\r\n                />\r\n                <Route path='/friendsList'\r\n                       render={ () => <FriendsList\r\n                           store={ this.props.store }\r\n                       />\r\n                       }\r\n                />\r\n            </div>\r\n\r\n            </body>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = ( state ) => {\r\n    return {\r\n        isInitialized: state.appRD.isInitialized\r\n    }\r\n};\r\n\r\nexport const AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {setInitializedThunkCreator, toCheckInitializationForProfile})\r\n)(App);\r\n\r\nlet SocialNetworkApp = (props) => {\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store} >\r\n                <AppContainer />\r\n            </Provider>\r\n        </HashRouter>\r\n    )\r\n};\r\n\r\nexport default SocialNetworkApp;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport {profileAPI, usersAPI} from \"../components/API/API\";\r\nimport {setButtonPressed, toFollowUnfollow} from \"./users-reducer\";\r\nconst ADD_POST = 'ADD-POST';\r\n\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_USER_STATUS = 'SET-USER-STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PHOTO = 'SET-USER-PHOTO';\r\nconst SET_USER_PROFILE_INFO = 'components/settings/SET-USER-PROFILE-INFO';\r\n\r\nlet initialProfile = {\r\n\r\n    profile: {\r\n        posts: [\r\n            {id: 1, posti: 'Its my own cosial network', ILikeIt: 15},\r\n            {id: 2, posti: 'Sounds fantastic!', ILikeIt: 20}\r\n        ]\r\n    },\r\n\r\n    singleProfile: null,\r\n\r\n    status: ''\r\n\r\n};\r\n\r\nconst  profileRD = (state = initialProfile, action) => {\r\n\r\n    let stateCopy;\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n            stateCopy = {\r\n                ...state,\r\n                profile: {\r\n                    posts: [...state.profile.posts, {id: 3, posti: action.text.postForm, ILikeIt: 2}],\r\n                }\r\n            };\r\n            return stateCopy;\r\n\r\n        case SET_USER_PROFILE:\r\n            stateCopy = {\r\n                ...state,\r\n                singleProfile: action.file\r\n            };\r\n            return stateCopy;\r\n\r\n        case SET_USER_STATUS:\r\n            stateCopy = {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n            return stateCopy;\r\n\r\n        case DELETE_POST:\r\n            stateCopy = {\r\n                ...state,\r\n                profile: {\r\n                    posts: [...state.profile.posts.filter( p => p.id !== action.postId )]\r\n                }\r\n            };\r\n            return stateCopy;\r\n\r\n        case SET_USER_PHOTO:\r\n            stateCopy = {\r\n                ...state,\r\n                singleProfile: {\r\n                    ...state.singleProfile,\r\n                    photos: {\r\n                        ...state.singleProfile.small,\r\n                        large: action.photo\r\n                    }\r\n                }\r\n            };\r\n            return stateCopy;\r\n\r\n        case SET_USER_PROFILE_INFO:\r\n            stateCopy = {\r\n                ...state,\r\n                singleProfile: {\r\n                   ...state.singleProfile, ...action.info\r\n                },\r\n\r\n            };\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const addPostActionCreatorr = ( text ) => ({ type: ADD_POST, text });\r\nexport const setUserProfile = (file) => ({ type: SET_USER_PROFILE, file });\r\nexport const setUsersStatus = (status) => ({ type: SET_USER_STATUS, status });\r\nexport const deletePostActionCreatorr = ( postId ) => ({ type: DELETE_POST, postId });\r\nexport const setAuthUserPhoto = ( photo ) => ({ type: SET_USER_PHOTO, photo });\r\nexport const setUserProfileInfo = ( info ) => ({ type: SET_USER_PROFILE_INFO, info });\r\n\r\nexport const toChangePhoto = ( photo ) => {\r\n\r\n    let photoToSend = new FormData(); // когда мы отправляем файл на сервер - нужно делать это используя\r\n    photoToSend.append('image', photo); // специальную разметку \"multipart/FormData\" - для этого необ\r\n                                                // ходимо создать специальный объект как сделано это здесь\r\n                                                // и поместить в него название файла и сам файл \"Formdata(название, файл)\"\r\n    return (dispatch) => {\r\n        profileAPI.sendPhoto(photoToSend).then(data => { // отправляем в API, где файл уже будет отправлен на сервер\r\n            dispatch(setAuthUserPhoto(data.data.photos.large))\r\n        })\r\n    }\r\n\r\n};\r\n\r\nexport const getUserProfileThunkCreatorr = ( userID ) => async (dispatch) => {\r\n\r\n    let data = await usersAPI.getUserProfile( userID );\r\n    dispatch(setUserProfile(data))\r\n\r\n};////////////////////////////////////////////////// СЛЕДУЮЩИЙ ЗАПРОС ИСПОЛЬЗУЕТ .then НО ПО СУТИ ОСТАЕТСЯ ТАКИМ ЖЕ/////////////////////////////////// П Р И М Е Р\r\n\r\nexport const getUsersStatusThunkCreator = (userID) => {\r\n    return (dispatch) => {\r\n        profileAPI.getUsersStatus( userID ).then(data => {\r\n            dispatch(setUsersStatus(data))\r\n        })\r\n    }\r\n};\r\n\r\nexport const sendUsersStatusThunkCreator = ( status ) => {\r\n    return () => {\r\n        profileAPI.sendStatus( status )\r\n    }\r\n};\r\n\r\nexport const sendUserProfileInfoTC = ( formdata, userId ) => async (dispatch) => {\r\n\r\n    debugger\r\n\r\n        let info = {\r\n            AboutMe: \"AboutMe\",\r\n            userId: userId,\r\n            lookingForAJob: true,\r\n            lookingForAJobDescription: formdata.lookingForAJobDescription,\r\n            fullName: formdata.fullName,\r\n            contacts: {\r\n                github: formdata.github ? formdata.github : \"\",\r\n                vk: formdata.vk ? formdata.vk : \"\",\r\n                facebook: formdata.facebook ? formdata.facebook : \"\",\r\n                instagram: formdata.instagram ? formdata.instagram : \"\",\r\n                twitter: formdata.twitter ? formdata.twitter : \"\",\r\n                website: formdata.website ? formdata.website : \"\",\r\n                youtube: formdata.youtube ? formdata.youtube : \"\",\r\n                mainLink: formdata.mainLink ? formdata.mainLink : \"\"\r\n            }\r\n        };\r\n\r\n        let data = await profileAPI.sendProfileInfo( info );\r\n        if (data.resultCode == 0) {\r\n            debugger\r\n            dispatch(setUserProfileInfo(data));\r\n        }\r\n};\r\n\r\nexport default profileRD;","import React, {useEffect, useState} from \"react\";\nimport style from \"../../../App.module.css\"\n\nconst UserPhoto = ( profileProps ) => {\n\n    let [photo, setUserPhoto] = useState(profileProps);\n\n    useEffect( () => {\n        setUserPhoto(profileProps);\n    }, [profileProps]);\n\n    return (\n        <div className={style.thePhoto}>\n            <img src={photo} />\n        </div>\n    )\n\n};\n\nexport default UserPhoto;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const AuthRedirectComponent = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n        return <Component {...props} />\r\n    };\r\n\r\n    return RedirectComponent\r\n\r\n};\r\n\r\n/*\r\nexport const AuthRedirectDone = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if (props.isAuth) return <Redirect to={'/profile/:userID'} />;\r\n\r\n        return <Component {...props} />\r\n    };\r\n\r\n    return RedirectComponent\r\n}*/\r\n","import React from \"react\";\r\nimport {usersAPI} from \"../components/API/API\";\r\nconst FOLLOW_UNFOLLOW = 'FOLLOW-UNFOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst CHANGE_PAGE = 'CHANGE-PAGE';\r\nconst CHANGE_TOTAL_USERS_COUNT = 'CHANGE-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst BUTTON_ALREADY_PRESSED = 'BUTTON-ALREADY-PRESSED'\r\n\r\nlet usersData = {\r\n\r\n    users: [],\r\n    pageSize: 99,\r\n    totalUsersCount: 1,\r\n    currentPage: 32,\r\n    isFetching: true,\r\n    isButtonPressed: []\r\n\r\n};\r\n\r\nconst  reduceUsers = (state = usersData, action) => {\r\n\r\n    let stateCopy;\r\n    switch (action.type) {\r\n\r\n        case FOLLOW_UNFOLLOW:\r\n            stateCopy = {\r\n                ...state,\r\n                users: state.users.map( u => {\r\n                    if ( u.id === action.userId ) {\r\n                        return { ...u, followed: !u.followed };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n            return stateCopy;\r\n\r\n        case SET_USERS:\r\n            stateCopy = { ...state, users: [...action.users] };\r\n            return stateCopy;\r\n\r\n        case CHANGE_PAGE:\r\n            stateCopy = {...state, currentPage: action.pageId };\r\n            return stateCopy;\r\n\r\n        case CHANGE_TOTAL_USERS_COUNT:\r\n            stateCopy = {...state, totalUsersCount: action.number};\r\n            return stateCopy;\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            stateCopy = {...state, isFetching: action.isFetching};\r\n            return stateCopy;\r\n\r\n        case BUTTON_ALREADY_PRESSED:\r\n            stateCopy = {\r\n                ...state,\r\n                isButtonPressed: action.isTueFalse\r\n                    ? [...state.isButtonPressed, action.userId]\r\n                    : [...state.isButtonPressed.filter(id => id !== action.userId)]\r\n            };\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const toFollowUnfollow = ( userId ) => ({ type: FOLLOW_UNFOLLOW, userId });\r\nexport const toUpdateUsers = ( users ) => ({ type: SET_USERS, users });\r\nexport const changePage = ( pageId ) => ({ type: CHANGE_PAGE, pageId });\r\nexport const setTotalUsersCount = ( number ) => ({ type: CHANGE_TOTAL_USERS_COUNT, number });\r\nexport const setFetching = ( isFetching ) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const setButtonPressed = ( isTueFalse, userId  ) => ({ type: BUTTON_ALREADY_PRESSED, isTueFalse, userId });\r\n\r\nexport const getUsersThunkCreator = (page, pageSize) => async (dispatch) => {\r\n\r\n    dispatch(setFetching(true));\r\n    dispatch(changePage(page));\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(setFetching(false));\r\n    dispatch(toUpdateUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n};\r\n\r\nexport const newPageGetUsers = (pageNumber, pageSize) => async (dispatch) => {\r\n\r\n    dispatch(setFetching( true ));\r\n    dispatch(changePage(pageNumber));\r\n    let data = await usersAPI.getUsers(pageNumber, pageSize);\r\n    dispatch(setFetching( false ));\r\n    dispatch(toUpdateUsers(data.items));\r\n\r\n};\r\n\r\nexport const followThunkCreator = ( usersId, isFollowed ) => async (dispatch) => {\r\n\r\n    if (isFollowed === true) {\r\n        dispatch(setButtonPressed( true, usersId ));\r\n        let data = await usersAPI.toUnFollowRequest( usersId );\r\n        if (data.resultCode == 0) {\r\n            dispatch(toFollowUnfollow(usersId));\r\n            dispatch(setButtonPressed( false, usersId ));\r\n        }\r\n    } else if (isFollowed === false) {\r\n        dispatch(setButtonPressed( true, usersId ));\r\n        let data = await usersAPI.toFollowRequest( usersId );\r\n        if (data.resultCode == 0) {\r\n            dispatch(toFollowUnfollow(usersId));\r\n            dispatch(setButtonPressed(false, usersId));\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport default reduceUsers;","import React from \"react\";\r\nimport style from \"../../../App.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const ControlForm = ({input, meta, child, ...props}) => {\r\n\r\n    let hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={style.formControlWrapper + ' ' + ( hasError ? style.error : \" \" )}>\r\n            <div className={style.formControl}>\r\n                { props.children }\r\n            </div>\r\n            {/*<span className={style.formError}>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </span>*/}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const FormsSimplification = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <ControlForm {...props} ><textarea className={ meta.touched && meta.error ? style.error : '' } {...input} {...restProps} /></ControlForm>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <ControlForm {...props} ><input {...input} {...restProps} /></ControlForm>\r\n};\r\n\r\n\r\n\r\n//// FIELD FORM SIMPLIFICATION ///////\r\n\r\nexport const FieldSimple = (placeholder, name, component = \"\", WhetherFieldRequired = \"\", maxLength = \"\", props = {}, text = \"\") => (\r\n\r\n        <div className={style.simpleField}>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   component={component}\r\n                   validate={[WhetherFieldRequired, maxLength]}\r\n                   {...props}\r\n            /> {text}\r\n        </div>\r\n\r\n);\r\n\r\n//// ANOTHER FIELD FORM SIMPLIFICATION ///////\r\n\r\nexport const FieldSimpleSettings = (placeholder, name, component = \"\") => (\r\n\r\n    <div className={style.simpleField}>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               component={component}\r\n        />\r\n    </div>\r\n\r\n);","import React from \"react\";\r\nimport preloaderPict from \"../../../images/preloader.gif\"\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloaderPict} />\r\n        </div>\r\n    )\r\n}\r\nexport default Preloader"],"sourceRoot":""}