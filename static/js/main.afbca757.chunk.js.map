{"version":3,"sources":["components/hoc/AuthRedirectComponent.jsx","Redux/users-reducer.js","images/preloader.gif","components/API/API.jsx","components/Correspondense/Correspondense.module.css","Redux/auth-reducer.js","components/Navigation.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/FriendsList/FriendsList.js","Redux/correspondense-reducer.jsx","components/Correspondense/DialogItem/DialogsItem.jsx","components/Correspondense/Message/Message.jsx","components/Correspondense/DialogTextareaForm/DialogTextareaForm.jsx","components/Correspondense/Correspondense.jsx","components/Correspondense/CorrespondenseContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","Redux/app-reducer.js","Redux/redux-store.js","components/hoc/LazyLoadHoc.jsx","App.js","serviceWorker.js","index.js","components/validation/Validation.js","components/Common/FormControl/FormsSimplification.jsx","components/Common/FormControl/Textarea.module.css","components/Header/Header.module.css","Redux/profile-reducer.jsx","components/Navigation.module.css","components/Common/Preloader/Preloader.jsx"],"names":["AuthRedirectComponent","Component","props","isAuth","to","usersData","users","pageSize","totalUsersCount","currentPage","isFetching","isButtonPressed","toFollowUnfollow","userId","type","toUpdateUsers","changePage","pageId","setFetching","setButtonPressed","isTueFalse","getUsersThunkCreator","page","dispatch","a","usersAPI","getUsers","data","items","number","totalCount","newPageGetUsers","pageNumber","followThunkCreator","usersId","isFollowed","toUnFollowRequest","resultCode","toFollowRequest","reduceUsers","state","action","map","u","id","followed","filter","module","exports","instance","axios","withCredentials","baseURL","headers","get","then","response","delete","post","toLogin","getUserProfile","userID","profileAPI","sendStatus","status","put","getUsersStatus","authAPI","authorization","email","password","rememberMe","deAuthorization","login","setAuthUserData","setAuthUserDataThunkCreator","toAuthUserDataThunkCreator","userFormData","stopSubmit","_error","toLogout","authRD","menu","classes","navMenu","navActive","Navigation","this","getUserProfileThunkCreatorr","match","params","className","nav","React","compose","connect","withRouter","News","store","getState","Music","Settings","FriendsList","initialCorrespondense","correspondence","conversationData","name","messagesData","message","correspondense","dialogForm","DialogItem","path","c","item","active","Message","maxLength20","maxLengthCreator","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","FormsSimplification","validate","fieldRequired","TextareaDialog","formdata","addCorrespondenseClickCreator","Correspondense","Dialogs","conversations","d","key","Messages","messages","m","style","wrapper","messages_wrapper","toWriteMessageTextareaButton","Header","header","imgg","login_block","login_word","onClick","HeaderContainer","LoginReduxForm","FieldSimple","Input","error","form_summary_error","Login","LoginContainer","appData","isInitialized","appRD","reducers","combineReducers","profileRD","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","LazyLoadHocComponent","fallback","UsersContainer","lazy","ProfileContainer","App","setInitializedThunkCreator","render","CorrespondenseContainer","s","Preloader","AppContainer","promise","Promise","all","SocialNetworkApp","basename","process","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","value","maxLength","length","ControlForm","input","meta","child","hasError","touched","formControl","children","restProps","WhetherFieldRequired","text","initialProfile","profile","posts","posti","ILikeIt","singleProfile","addPostActionCreatorr","file","getUsersStatusThunkCreator","sendUsersStatusThunkCreator","postForm","p","postId","src","preloaderPict"],"mappings":"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","file":"static/js/main.afbca757.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const AuthRedirectComponent = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n        return <Component {...props} />\r\n    };\r\n\r\n    return RedirectComponent\r\n\r\n};\r\n\r\n/*\r\nexport const AuthRedirectDone = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if (props.isAuth) return <Redirect to={'/profile/:userID'} />;\r\n\r\n        return <Component {...props} />\r\n    };\r\n\r\n    return RedirectComponent\r\n}*/\r\n","import React from \"react\";\r\nimport {usersAPI} from \"../components/API/API\";\r\nconst FOLLOW_UNFOLLOW = 'FOLLOW-UNFOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst CHANGE_PAGE = 'CHANGE-PAGE';\r\nconst CHANGE_TOTAL_USERS_COUNT = 'CHANGE-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst BUTTON_ALREADY_PRESSED = 'BUTTON-ALREADY-PRESSED'\r\n\r\nlet usersData = {\r\n\r\n    users: [],\r\n    pageSize: 99,\r\n    totalUsersCount: 1,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isButtonPressed: []\r\n\r\n};\r\n\r\nconst  reduceUsers = (state = usersData, action) => {\r\n\r\n    let stateCopy;\r\n    switch (action.type) {\r\n\r\n        case FOLLOW_UNFOLLOW:\r\n            stateCopy = {\r\n                ...state,\r\n                users: state.users.map( u => {\r\n                    if ( u.id === action.userId ) {\r\n                        return { ...u, followed: !u.followed };\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n            return stateCopy;\r\n\r\n        case SET_USERS:\r\n            stateCopy = { ...state, users: [...action.users] };\r\n            return stateCopy;\r\n\r\n        case CHANGE_PAGE:\r\n            stateCopy = {...state, currentPage: action.pageId };\r\n            return stateCopy;\r\n\r\n        case CHANGE_TOTAL_USERS_COUNT:\r\n            stateCopy = {...state, totalUsersCount: action.number};\r\n            return stateCopy;\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            stateCopy = {...state, isFetching: action.isFetching};\r\n            return stateCopy;\r\n\r\n        case BUTTON_ALREADY_PRESSED:\r\n            stateCopy = {\r\n                ...state,\r\n                isButtonPressed: action.isTueFalse\r\n                    ? [...state.isButtonPressed, action.userId]\r\n                    : [...state.isButtonPressed.filter(id => id !== action.userId)]\r\n            };\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const toFollowUnfollow = ( userId ) => ({ type: FOLLOW_UNFOLLOW, userId });\r\nexport const toUpdateUsers = ( users ) => ({ type: SET_USERS, users });\r\nexport const changePage = ( pageId ) => ({ type: CHANGE_PAGE, pageId });\r\nexport const setTotalUsersCount = ( number ) => ({ type: CHANGE_TOTAL_USERS_COUNT, number });\r\nexport const setFetching = ( isFetching ) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const setButtonPressed = ( isTueFalse, userId  ) => ({ type: BUTTON_ALREADY_PRESSED, isTueFalse, userId });\r\n\r\nexport const getUsersThunkCreator = (page, pageSize) => async (dispatch) => {\r\n\r\n    dispatch(setFetching(true));\r\n    dispatch(changePage(page));\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(setFetching(false));\r\n    dispatch(toUpdateUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n};\r\n\r\nexport const newPageGetUsers = (pageNumber, pageSize) => async (dispatch) => {\r\n\r\n    dispatch(setFetching( true ));\r\n    dispatch(changePage(pageNumber));\r\n    let data = await usersAPI.getUsers(pageNumber, pageSize);\r\n    dispatch(setFetching( false ));\r\n    dispatch(toUpdateUsers(data.items));\r\n\r\n};\r\n\r\nexport const followThunkCreator = ( usersId, isFollowed ) => async (dispatch) => {\r\n\r\n    if (isFollowed === true) {\r\n        dispatch(setButtonPressed( true, usersId ));\r\n        let data = await usersAPI.toUnFollowRequest( usersId );\r\n        if (data.resultCode == 0) {\r\n            dispatch(toFollowUnfollow(usersId));\r\n            dispatch(setButtonPressed( false, usersId ));\r\n        }\r\n    } else if (isFollowed === false) {\r\n        dispatch(setButtonPressed( true, usersId ));\r\n        let data = await usersAPI.toFollowRequest( usersId );\r\n        if (data.resultCode == 0) {\r\n            dispatch(toFollowUnfollow(usersId));\r\n            dispatch(setButtonPressed(false, usersId));\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport default reduceUsers;","module.exports = __webpack_public_path__ + \"static/media/preloader.114a6d05.gif\";","import * as axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"b891edb4-172f-4673-a388-0183624ea4a0\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize)  {\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => {\r\n                        return response.data\r\n                    }\r\n                ))\r\n    },\r\n    toUnFollowRequest( userId ) {\r\n        return (\r\n            instance.delete(`follow/` + userId)\r\n                .then(response => {\r\n                        return response.data\r\n                    }\r\n                )\r\n        )\r\n    },\r\n    toFollowRequest( userId ) {\r\n        return (\r\n            instance.post(`follow/` + userId, {})\r\n                .then(response => {\r\n                        return response.data\r\n                    }\r\n                )\r\n        )\r\n    },\r\n    toLogin() {\r\n        return (\r\n            instance.get(`auth/me`)\r\n                .then(response => {\r\n                    return  response.data.data;\r\n                })\r\n        )\r\n    },\r\n    getUserProfile( userID ) {\r\n        return profileAPI.getUserProfile(userID)\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getUserProfile( userID ) {\r\n        return (\r\n            instance.get(`profile/` + userID)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    sendStatus( status ) {\r\n        return (\r\n            instance.put('profile/status/', {status: status})\r\n        )\r\n    },\r\n    getUsersStatus( userId ) {\r\n        return (\r\n            instance.get('profile/status/' + userId)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    authorization( email, password, rememberMe ) {\r\n        return (\r\n            instance.post(`auth/login?email=${email}&password=${password}&rememberMe=${rememberMe}`, {})\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    deAuthorization() {\r\n        return (\r\n            instance.delete(`auth/login/`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"correspondense\":\"Correspondense_correspondense__2_bGm\",\"wrapper\":\"Correspondense_wrapper__15OlP\",\"active\":\"Correspondense_active__3ftE4\",\"item\":\"Correspondense_item__r1_TG\",\"messages\":\"Correspondense_messages__HRy08\",\"message\":\"Correspondense_message__3bpt5\",\"toWriteMessageTextareaButton\":\"Correspondense_toWriteMessageTextareaButton__1bt9n\"};","import React from \"react\";\r\nimport {authAPI, usersAPI} from \"../components/API/API\";\r\nimport {stopSubmit} from \"redux-form\"\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\nconst LOGOUT_USER_DATA = 'LOGOUT-USER-DATA';\r\n\r\n\r\nlet usersData = {\r\n\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n\r\n    isAuth: false\r\n\r\n};\r\n\r\nconst  authRD = (state = usersData, action) => {\r\n\r\n    let stateCopy;\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            stateCopy = {\r\n                ...state,\r\n                ...action.data\r\n            };\r\n            return stateCopy;\r\n\r\n        case LOGOUT_USER_DATA:\r\n            stateCopy = {\r\n                ...state,\r\n                userId: null,\r\n                email: null,\r\n                login: null,\r\n                isAuth: false\r\n            };\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setAuthUserData = ( userId, login, email, isAuth ) => ({ type: SET_USER_DATA, data: {userId, login, email, isAuth} });\r\n/*export const setLogouthUserData = () => ({ type: LOGOUT_USER_DATA });*/\r\n\r\nexport const setAuthUserDataThunkCreator = () => (dispatch) => {\r\n\r\n\r\n        return usersAPI.toLogin().then(data => {\r\n            if (data.email) {\r\n                let {id, login, email} = data;\r\n                dispatch(setAuthUserData(id, login, email));\r\n            }\r\n        });\r\n\r\n};\r\n\r\nexport const toAuthUserDataThunkCreator = ( userFormData ) => async (dispatch) => {\r\n\r\n    let { email, password, rememberMe } = userFormData;\r\n    let data = await authAPI.authorization( email, password, rememberMe ); // ждем ответа на асинхронный запрос\r\n    if (data.resultCode === 0) {\r\n\r\n        data = await usersAPI.toLogin();\r\n\r\n        if (data.email) {\r\n            let {id, login, email} = data;\r\n            dispatch(setAuthUserData(id, login, email, true));\r\n        }\r\n    } else {\r\n        let action = stopSubmit('login', {_error: \"Введены не верные данные\"}); // если введены не правильные данные то выведет ошибку\r\n        dispatch(action);\r\n    }\r\n};\r\n\r\nexport const toLogout = () => async (dispatch) => {\r\n    authAPI.deAuthorization().then(data => {\r\n        if (data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    })\r\n};\r\n\r\n\r\nexport default authRD;","import React from 'react';\r\nimport classes from './Navigation.module.css';\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {getUserProfileThunkCreatorr} from \"../Redux/profile-reducer\";\r\n\r\n\r\nlet menu = `${classes.navMenu} ${classes.navActive}`;\r\n\r\nclass Navigation extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUserProfileThunkCreatorr(this.props.match.params.userID);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className={classes.nav}>\r\n                <div className={menu}>\r\n                    <NavLink to={\"/profile/7398\"}>Profile</NavLink>\r\n                </div>\r\n                <div className={menu}>\r\n                    <NavLink to={\"/correspondense\"}>Messages</NavLink>\r\n                </div>\r\n                <div className={menu}>\r\n                    <NavLink to=\"/users\">Users</NavLink>\r\n                </div>\r\n                <div className={menu}>\r\n                    <NavLink to=\"/news\">News</NavLink>\r\n                </div>\r\n                <div className={menu}>\r\n                    <NavLink to=\"/music\">Music</NavLink>\r\n                </div>\r\n                <div className={menu}>\r\n                    <NavLink to=\"/settings\">Settings</NavLink>\r\n                </div>\r\n                <div className={menu}>\r\n                    <NavLink to=\"/friendsList\">FriendsList</NavLink>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfileThunkCreatorr}),\r\n    withRouter\r\n)(Navigation);","import React from 'react';\r\nimport classes from './News.module.css';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport authRD from \"../../Redux/auth-reducer\";\r\n\r\nconst News = (props) => {\r\n\r\n    if (props.store.getState().authRD.isAuth == false) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n        <div>\r\n            Здесь будут новости\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport classes from './Settings.module.css';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Music = (props) => {\r\n\r\n    if (props.store.getState().authRD.isAuth == false) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n        <div>\r\n            Здесь будут новости\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport classes from './Settings.module.css';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Settings = (props) => {\r\n\r\n    if (props.store.getState().authRD.isAuth == false) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n        <div>\r\n            Здесь будут настройки страницы\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport style from './FriendsList.module.css';\r\nimport SingleFriend from \"./SingleFriend/SingleFriend\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst FriendsList = (props) => {\r\n\r\n    /*let SingleFrinedd = props.name.map( f => <SingleFriend name={f.name} id={f.id} /> );*/\r\n    if (props.store.getState().authRD.isAuth == false) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n        <div>\r\n            {/*{SingleFrinedd}*/}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FriendsList;","const CORRESPONDENSE_DYNAMIC_CHANGE = 'CORRESPONDENSE_DYNAMIC_CHANGE'\r\nconst CORRESPONDENSE_STATIC_CHANGE = 'CORRESPONDENSE_STATIC_CHANGE'\r\n\r\n\r\nlet initialCorrespondense = {\r\n    correspondence: {\r\n        conversationData: [\r\n            {id: 1, name: 'Dimych'},\r\n            {id: 2, name: 'Vitek'},\r\n            {id: 3, name: 'Sveta'},\r\n            {id: 4, name: 'Valera'},\r\n        ],\r\n        messagesData: [\r\n            {id: 1, message: \"how is your it-kamasutra\"},\r\n            {id: 2, message: \"why\"},\r\n            {id: 3, message: \"yo\"},\r\n        ]\r\n    },\r\n};\r\n\r\n\r\nconst correspondense = (state = initialCorrespondense, action) => {\r\n\r\n    let stateCopy;\r\n    switch (action.type) {\r\n\r\n        case CORRESPONDENSE_STATIC_CHANGE:\r\n            stateCopy = {\r\n                ...state,\r\n                correspondence: {\r\n                    conversationData: [...state.correspondence.conversationData],\r\n                    messagesData: [...state.correspondence.messagesData, {id: 5, message: action.message.dialogForm}] // добавление текста из того, что находится в хранилище\r\n                }\r\n            };\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addCorrespondenseClickCreator = ( message ) => ({ type: CORRESPONDENSE_STATIC_CHANGE, message }) // сопоставление \"пароля\" для реализации кода\r\n\r\nexport default correspondense","import React from 'react';\r\nimport c from './../Correspondense.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/Correspondense/\" + props.id\r\n    return (\r\n        <div className={c.item + ' ' + c.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport c from './../Correspondense.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={c.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {fieldRequired, maxLengthCreator} from \"../../validation/Validation\";\r\nimport {FormsSimplification} from \"../../Common/FormControl/FormsSimplification\";\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\nconst DialogForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder={'Введите Ваш текст'}\r\n                   name={'dialogForm'}\r\n                   component={FormsSimplification}\r\n                   validate={[fieldRequired, maxLength20]}\r\n            />\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n\r\n};\r\n\r\nconst DialogReduxForm = reduxForm({form: 'dialog'})(DialogForm);\r\n\r\nconst TextareaDialog = (props) => {\r\n\r\n    const onSubmit = (formdata) => {\r\n        props.addCorrespondenseClickCreator(formdata)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <DialogReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TextareaDialog","import React from 'react';\r\nimport style from './Correspondense.module.css';\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport TextareaDialog from \"./DialogTextareaForm/DialogTextareaForm\";\r\nimport {addCorrespondenseClickCreator} from \"../../Redux/correspondense-reducer\";\r\n\r\nconst Correspondense = (props) => {\r\n\r\n    let Dialogs = props.conversations.map( d => <DialogItem name={d.name} id={d.id} key={d.id} /> );\r\n    let Messages = props.messages.map( m => <Message message={m.message} id={m.id} key={m.id} /> );\r\n\r\n    return (\r\n        <div className={style.correspondense}>\r\n           <div className={style.wrapper}>\r\n               {Dialogs}\r\n           </div>\r\n           <div className={style.messages}>\r\n               <div className={style.messages_wrapper}>\r\n                    {Messages}\r\n               </div>\r\n               <div className={style.toWriteMessageTextareaButton}>\r\n                   <TextareaDialog addCorrespondenseClickCreator={props.addCorrespondenseClickCreator} />\r\n               </div>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Correspondense;","import React from 'react';\r\nimport correspondense, {addCorrespondenseClickCreator} from \"../../Redux/correspondense-reducer\";\r\nimport Correspondense from \"./Correspondense\";\r\nimport {connect} from 'react-redux'\r\nimport authRD from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AuthRedirectComponent} from \"../hoc/AuthRedirectComponent\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = ( state ) => {\r\n    return {\r\n        conversations: state.correspondense.correspondence.conversationData,\r\n        messages: state.correspondense.correspondence.messagesData,\r\n        isAuth: state.authRD.isAuth\r\n    }\r\n};\r\n\r\nexport default compose (\r\n    connect( mapStateToProps, {addCorrespondenseClickCreator} ),\r\n    AuthRedirectComponent\r\n)(Correspondense);","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n    <header className={style.header}>\r\n        <div className={style.imgg}></div>\r\n        <div className={style.login_block}>\r\n            {props.isAuth ? <span>{props.login}</span> : <NavLink to={'/login'} className={style.login_word}>Login</NavLink>}\r\n            {props.isAuth ? <button onClick={props.toLogout}>Выйти</button> : \"\"}\r\n        </div>\r\n    </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport authRD, {toLogout} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authRD.isAuth,\r\n        login: state.authRD.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {toLogout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nimport {fieldRequired, maxLengthCreator} from \"../validation/Validation\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from '../Common/FormControl/Textarea.module.css'\r\nimport {FieldSimple, Input} from \"../Common/FormControl/FormsSimplification\";\r\n\r\nconst maxLength20 = maxLengthCreator(30);\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {FieldSimple('email', 'email', Input, fieldRequired, maxLength20)}\r\n            {FieldSimple('name', 'password', Input, fieldRequired, maxLength20)}\r\n            {FieldSimple(\"\", \"rememberMe\", \"input\", fieldRequired, maxLength20, {type: \"checkbox\"}, \"remember me\")}\r\n            {/*<div>\r\n                <Field type={'checkbox'} name={'rememberMe'} component={'input'} /> remember me //////////// П Р И М Е Р\r\n            </div>*/}\r\n            { props.error &&\r\n            <div className={style.form_summary_error}>\r\n                {props.error}\r\n            </div>\r\n             }\r\n            <div>\r\n                <button>Log in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formdata) => {\r\n        props.toAuthUserDataThunkCreator(formdata)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile/:userID\"} />\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Зарегистрируйтесь пожалуйста</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Login","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport authRD, {toAuthUserDataThunkCreator} from \"../../Redux/auth-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Login toAuthUserDataThunkCreator={this.props.toAuthUserDataThunkCreator}\r\n                   isAuth={this.props.isAuth}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authRD.isAuth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect( mapStateToProps, {toAuthUserDataThunkCreator} ),\r\n    withRouter\r\n)(LoginContainer);","import React from \"react\";\r\nimport {setAuthUserDataThunkCreator} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED = 'INITIALIZED';\r\n\r\n\r\nlet appData = {\r\n\r\n    isInitialized: false,\r\n\r\n};\r\n\r\nconst  appRD = (state = appData, action) => {\r\n\r\n    let stateCopy;\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED:\r\n            stateCopy = {\r\n                ...state,\r\n                isInitialized: true\r\n            };\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setInitializedSuccess = () => ({ type: INITIALIZED });\r\n\r\nexport const setInitializedThunkCreator = () => async (dispatch) => {\r\n\r\n        let promise = dispatch(setAuthUserDataThunkCreator());\r\n\r\n        await Promise.all([promise])\r\n\r\n        dispatch(setInitializedSuccess())\r\n\r\n        /*return (dispatch) => {\r\n            usersAPI.toLogin().then(data => {\r\n                if (data.email) {\r\n                    let {id, login, email} = data;\r\n                    dispatch(setAuthUserData(id, login, email));\r\n                }\r\n            })\r\n        }*/\r\n};\r\n\r\n\r\n\r\n\r\nexport default appRD;","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport correspondense from \"./correspondense-reducer\";\r\nimport reduceUsers from \"./users-reducer\";\r\nimport profileRD from \"./profile-reducer\";\r\nimport authRD from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport appRD from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profileRD,\r\n    correspondense,\r\n    reduceUsers,\r\n    authRD,\r\n    form: formReducer,\r\n    appRD\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\nwindow.store = store;\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\n\r\n\r\nexport const LazyLoadHocComponent = (Component) => {\r\n\r\n    const LazyComponent = (props) => {\r\n\r\n        return <Suspense fallback={<h1>Loading profile...</h1>}>\r\n                <Component />\r\n            </Suspense>\r\n\r\n\r\n    };\r\n\r\n    return LazyComponent\r\n\r\n};","import React, {Suspense} from 'react';\r\nimport './App.css';\r\nimport Navigation from \"./components/Navigation\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport FriendsList from \"./components/FriendsList/FriendsList\";\r\nimport CorrespondenseContainer from \"./components/Correspondense/CorrespondenseContainer\";\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginContainer from \"./components/Login/LoginContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport appRD, {setInitializedThunkCreator} from \"./Redux/app-reducer\";\r\nimport Preloader from \"./components/Common/Preloader/Preloader\";\r\nimport store from './Redux/redux-store';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {LazyLoadHocComponent} from \"./components/hoc/LazyLoadHoc\";\r\n\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer')); // Lazy-loaded\r\nconst ProfileContainer = React.lazy(() => import('./components/ProfileContainer')); // Lazy-loadedss\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setInitializedThunkCreator()\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.isInitialized) {\r\n            return <Preloader />\r\n        }\r\n\r\n        return (\r\n\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer\r\n                    store={this.props.store}\r\n                />\r\n                <Navigation\r\n                    store={this.props.store}\r\n                />\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path='/correspondense'\r\n                           render={ () =>\r\n                               <CorrespondenseContainer s\r\n                                   store={ this.props.store }\r\n                               />\r\n                           }\r\n                    />\r\n                    <Route path='/profile/:userID?'\r\n                           render={ LazyLoadHocComponent(ProfileContainer) }/>\r\n\r\n                    <Route path='/users'\r\n                           render={ LazyLoadHocComponent(UsersContainer) }/>\r\n\r\n                    <Route path='/login'\r\n                           render={ () => <LoginContainer\r\n                               store={ this.props.store }\r\n                           />\r\n                           }\r\n                    />\r\n                    <Route path='/news'\r\n                           render={ () => <News\r\n                               store={ this.props.store }\r\n                           />\r\n                           }\r\n                    />\r\n                    <Route path='/music'\r\n                           render={ () => <Music\r\n                               store={ this.props.store }\r\n                           />\r\n                           }\r\n                    />\r\n                    <Route path='/settings'\r\n                           render={ () => <Settings\r\n                               store={ this.props.store }\r\n                           />\r\n                           }\r\n                    />\r\n                    <Route path='/friendsList'\r\n                           render={ () => <FriendsList\r\n                               store={ this.props.store }\r\n                           />\r\n                           }\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = ( state ) => {\r\n    return {\r\n        isInitialized: state.appRD.isInitialized\r\n    }\r\n};\r\n\r\nexport const AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {setInitializedThunkCreator})\r\n)(App);\r\n\r\nlet SocialNetworkApp = (props) => {\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}> /*// возьми URL из окружения env(environment.) что значит */\r\n            <Provider store={store} > /* process - глобальный объект как window*/\r\n                <AppContainer />\r\n            </Provider>\r\n        </HashRouter>\r\n    )\r\n};\r\n\r\nexport default SocialNetworkApp;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const fieldRequired = value => {\r\n    if (value) return undefined;\r\n    return \"Введите пожалуйста текст\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `maximum size is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport style from \"./Textarea.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const ControlForm = ({input, meta, child, ...props}) => {\r\n\r\n    let hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={style.formControl + ' ' + ( hasError ? style.error : \" \" )}>\r\n            <div>\r\n                { props.children }\r\n            </div>\r\n            <span>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const FormsSimplification = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <ControlForm {...props} ><textarea {...input} {...restProps} /></ControlForm>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <ControlForm {...props} ><input {...input} {...restProps} /></ControlForm>\r\n}\r\n\r\n\r\n\r\n//// FIELD FORM SIMPLIFICATION ///////\r\n\r\nexport const FieldSimple = (placeholder, name, component = \"\", WhetherFieldRequired = \"\", maxLength = \"\", props = {}, text = \"\") => (\r\n\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   component={component}\r\n                   validate={[WhetherFieldRequired, maxLength]}\r\n                   {...props}\r\n            /> {text}\r\n        </div>\r\n\r\n)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Textarea_formControl__3b3vh\",\"error\":\"Textarea_error__3a5Wj\",\"form_summary_error\":\"Textarea_form_summary_error__MoBxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__70uVn\",\"imgg\":\"Header_imgg__1vgkW\",\"login_block\":\"Header_login_block__1HvQH\",\"login_word\":\"Header_login_word__aMzD0\"};","import React from \"react\";\r\nimport {profileAPI, usersAPI} from \"../components/API/API\";\r\nconst ADD_POST = 'ADD-POST';\r\n\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_USER_STATUS = 'SET-USER-STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialProfile = {\r\n\r\n    profile: {\r\n        posts: [\r\n            {id: 1, posti: 'Its my own cosial network', ILikeIt: 15},\r\n            {id: 2, posti: 'Sounds fantastic!', ILikeIt: 20}\r\n        ],\r\n        singleProfile: null\r\n    },\r\n\r\n    status: ''\r\n\r\n};\r\n\r\nconst  profileRD = (state = initialProfile, action) => {\r\n\r\n    let stateCopy;\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n            stateCopy = {\r\n                ...state,\r\n                profile: {\r\n                    posts: [...state.profile.posts, {id: 3, posti: action.text.postForm, ILikeIt: 2}]\r\n                }\r\n            };\r\n            return stateCopy;\r\n\r\n        case SET_USER_PROFILE:\r\n            stateCopy = {\r\n                ...state,\r\n                profile: {\r\n                    posts: [...state.profile.posts],\r\n                    singleProfile: action.file\r\n                }\r\n            };\r\n            return stateCopy;\r\n\r\n        case SET_USER_STATUS:\r\n            stateCopy = {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n            return stateCopy;\r\n\r\n        case DELETE_POST:\r\n            stateCopy = {\r\n                ...state,\r\n                profile: {\r\n                    posts: [...state.profile.posts.filter( p => p.id !== action.postId )]\r\n                }\r\n            };\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const addPostActionCreatorr = ( text ) => ({ type: ADD_POST, text });\r\nexport const setUserProfile = (file) => ({ type: SET_USER_PROFILE, file });\r\nexport const setUsersStatus = (status) => ({ type: SET_USER_STATUS, status });\r\nexport const deletePostActionCreatorr = ( postId ) => ({ type: DELETE_POST, postId });\r\n\r\nexport const getUserProfileThunkCreatorr = ( userID ) => async (dispatch) => {\r\n\r\n    let data = await usersAPI.getUserProfile( userID );\r\n    dispatch(setUserProfile(data))\r\n\r\n};////////////////////////////////////////////////// СЛЕДУЮЩИЙ ЗАПРОС ИСПОЛЬЗУЕТ .then НО ПО СУТИ ОСТАЕТСЯ ТАКИМ ЖЕ/////////////////////////////////// П Р И М Е Р\r\n\r\nexport const getUsersStatusThunkCreator = (userID) => {\r\n    return (dispatch) => {\r\n        profileAPI.getUsersStatus( userID ).then(data => {\r\n            dispatch(setUsersStatus(data))\r\n        })\r\n    }\r\n};\r\n\r\nexport const sendUsersStatusThunkCreator = ( status ) => {\r\n    return () => {\r\n        profileAPI.sendStatus( status )\r\n    }\r\n};\r\n\r\nexport default profileRD;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navMenu\":\"Navigation_navMenu__1FWdP\",\"navActive\":\"Navigation_navActive__1sQ0P\"};","import React from \"react\";\r\nimport preloaderPict from \"../../../images/preloader.gif\"\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloaderPict} />\r\n        </div>\r\n    )\r\n}\r\nexport default Preloader"],"sourceRoot":""}