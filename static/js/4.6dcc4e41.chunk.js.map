{"version":3,"sources":["components/Users/Users.module.css","images/logo.jpg","components/Users/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","../node_modules/reselect/es/index.js","Redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","props","pagesCount","totalUsersCount","pageSize","Math","ceil","pages","i","push","map","p","currentPage","className","style","selectedPage","unselected_page","onClick","onChangePage","User","user","key","id","wrapper","breakdown","to","src","photos","small","Photo","user_photo","user_name","name","followed","disabled","isButtonPressed","some","followThunkCreator","Users","users","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getUsers","state","reduceUsers","filter","u","getPageSize","getUsersCount","getCurrentPage","getWhetherIsFetching","isFetching","getWhetherIsButtonPressed","getWhetherIsAuth","authRD","isAuth","UsersAPIComponent","pageNumber","newPageGetUsers","this","getUsersThunkCreator","Preloader","setButtonPressed","React","Component","compose","connect","toUpdateUsers","changePage"],"mappings":"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","file":"static/js/4.6dcc4e41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__1nFJV\",\"user\":\"Users_user__2zYcu\",\"user_photo\":\"Users_user_photo__1zkoT\",\"user_name\":\"Users_user_name__1xVZt\",\"breakdown\":\"Users_breakdown__3a35G\",\"selectedPage\":\"Users_selectedPage__2oVUF\",\"unselected_page\":\"Users_unselected_page__2TvT-\"};","module.exports = __webpack_public_path__ + \"static/media/logo.9bf01a7a.jpg\";","import React from \"react\";\r\nimport style from \"./Users.module.css\";\r\n\r\nconst Paginator = (props) => {\r\n\r\n        let pagesCount = props.totalUsersCount/props.pageSize;\r\n        pagesCount = Math.ceil( pagesCount );\r\n\r\n        let pages = [];\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                { props.pages.map( p => {\r\n                    if (props.currentPage === p) {\r\n                        return <span className={ style.selectedPage }>{p}</span>\r\n                    } else {\r\n                        return <span className={style.unselected_page} onClick={ () => { props.onChangePage(p) } }>{p}</span>\r\n                    }\r\n                })}\r\n\r\n            </div>\r\n        )\r\n\r\n};\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport style from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Photo from \"../../images/logo.jpg\";\r\n\r\nconst User = (props) => {\r\n\r\n    let user = props.user;\r\n\r\n    return (\r\n        <div key={user.id} className={`${style.wrapper} ${style.user}`}>\r\n            <div className={style.breakdown}>\r\n                <NavLink to={'/Profile/' + user.id}>\r\n                    <img src={user.photos.small !== null ? user.photos.small : Photo} className={style.user_photo} />\r\n                </NavLink>\r\n                <div className={style.user_name}>{user.name}</div>\r\n                {\r\n                    user.followed === true ?\r\n                    <button disabled={props.isButtonPressed.some( id => id === user.id)}\r\n                            onClick={ () => { props.followThunkCreator( user.id, user.followed ) } }>Unfollow</button>\r\n                    /*usersAPI.toUnFollowRequest( user.id ).then(data => { // П Р И М Е Р\r\n                       if (data.resultCode == 0) { // П Р И М Е Р\r\n                           props.toUnFollow(user.id); // П Р И М Е Р\r\n                           props.setButtonPressed( false, user.id ); // П Р И М Е Р\r\n                       } // П Р И М Е Р\r\n                   })*/ // П Р И М Е Р\r\n                    :\r\n                    <button disabled={props.isButtonPressed.some( id => id === user.id)}\r\n                            onClick={ () => { props.followThunkCreator( user.id, user.followed ) } }>Follow</button>\r\n                }\r\n            </div>\r\n            {/*<div className={style.breakdown}>\r\n                            <div className={style.country}>{user.adress.country}</div>\r\n                            <div className={style.city}>{user.adress.city}</div>\r\n                        </div>*/}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User","import React from \"react\";\r\nimport Paginator from \"./Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nconst Users = ( props ) =>  {\r\n\r\n        return (\r\n            <div>\r\n                <Paginator totalUsersCount={props.totalUsersCount}\r\n                           pageSize={props.pageSize}\r\n                           pages={props.pages}\r\n                           currentPage={props.currentPage}\r\n                           onChangePage={props.onChangePage}\r\n                />\r\n                {props.users.map(user =>\r\n                    <User user={user}\r\n                          isButtonPressed={props.isButtonPressed}\r\n                          followThunkCreator={props.followThunkCreator}\r\n                    />\r\n                )}\r\n            </div>\r\n        )\r\n    };\r\n\r\n\r\nexport default Users","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import React from \"react\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = ( state ) => {\r\n return state.reduceUsers.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, ( users ) => {\r\n    return users.filter( u => true )\r\n})\r\n\r\n\r\n\r\nexport const getPageSize = ( state ) => {\r\n    return state.reduceUsers.pageSize\r\n}\r\n\r\nexport const getUsersCount = ( state ) => {\r\n    return state.reduceUsers.totalUsersCount\r\n\r\n}\r\n\r\nexport const getCurrentPage = ( state ) => {\r\n    return state.reduceUsers.currentPage\r\n}\r\n\r\nexport const getWhetherIsFetching = ( state ) => {\r\n    return state.reduceUsers.isFetching\r\n}\r\n\r\nexport const getWhetherIsButtonPressed = ( state ) => {\r\n    return state.reduceUsers.isButtonPressed\r\n}\r\n\r\nexport const getWhetherIsAuth = ( state ) => {\r\n    return state.authRD.isAuth\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport reduceUsers, {\r\n    toUpdateUsers,\r\n    changePage,\r\n    setButtonPressed, getUsersThunkCreator, newPageGetUsers, followThunkCreator\r\n} from \"../../Redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getPageSize, getUsers, getUsersCount,\r\n    getWhetherIsAuth,\r\n    getWhetherIsButtonPressed,\r\n    getWhetherIsFetching\r\n} from \"../../Redux/users-selectors\";\r\n\r\n\r\n\r\n\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.users.length === 0) {\r\n            this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n        }\r\n        /*if (this.props.users.length === 0) { // П Р И М Е Р\r\n            this.props.setFetching( true ); // П Р И М Е Р\r\n            usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => { // П Р И М Е Р\r\n                this.props.setFetching( false ); // П Р И М Е Р\r\n                this.props.toUpdateUsers(data.items); // П Р И М Е Р\r\n                let num = data.totalCount/180; // П Р И М Е Р\r\n                num = Math.ceil(num); // П Р И М Е Р\r\n                this.props.setTotalUsersCount(num); // П Р И М Е Р\r\n            }); // П Р И М Е Р\r\n        }*/ // П Р И М Е Р\r\n    }\r\n\r\n    onChangePage = (pageNumber) => {\r\n        this.props.newPageGetUsers(pageNumber, this.props.pageSize )\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let pagesCount = this.props.totalUsersCount/this.props.pageSize;\r\n        pagesCount = Math.ceil( pagesCount );\r\n\r\n        let pages = [];\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                { this.props.isFetching ? <Preloader /> : \"\"}\r\n\r\n                <Users\r\n                    pages={pages}\r\n                    onChangePage={this.onChangePage}\r\n                    users={this.props.users}\r\n                    currentPage={this.props.currentPage}\r\n                    isFetching={this.props.isFetching}\r\n                    setButtonPressed={this.props.setButtonPressed}\r\n                    isButtonPressed={this.props.isButtonPressed}\r\n                    followThunkCreator={this.props.followThunkCreator}\r\n                    isAuth={this.props.isAuth}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = ( state ) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getWhetherIsFetching(state),\r\n        isButtonPressed: getWhetherIsButtonPressed(state),\r\n        isAuth: getWhetherIsAuth(state)\r\n    }\r\n};\r\n\r\n/*let mapDispatchToProps = ( dispatch ) => { // П Р И М Е Р\r\n    return { // П Р И М Е Р\r\n        toFollow: ( uId ) => { // П Р И М Е Р\r\n            dispatch( followUser(uId) ) // П Р И М Е Р\r\n        }, // П Р И М Е Р\r\n        toUnFollow: ( uId ) => { // П Р И М Е Р\r\n            dispatch( unFollowUser(uId) ) // П Р И М Е Р\r\n        }, // П Р И М Е Р\r\n        toUpdateUsers: ( allUsers ) => { // П Р И М Е Р\r\n            dispatch( setUsers( allUsers) ) // П Р И М Е Р\r\n        }, // П Р И М Е Р\r\n        changePage: ( page ) => { // П Р И М Е Р\r\n            dispatch( toChangePage(page) ) // П Р И М Е Р\r\n        }, // П Р И М Е Р\r\n        setTotalUsersCount: ( number ) => { // П Р И М Е Р\r\n            dispatch( toChangeTotalUsersCount(number) ) // П Р И М Е Р\r\n        }, // П Р И М Е Р\r\n        setFetching: ( isFetching ) => { // П Р И М Е Р\r\n            dispatch( toChangeFetching(isFetching) ) // П Р И М Е Р\r\n        } // П Р И М Е Р\r\n\r\n    } // П Р И М Е Р\r\n};*/ // П Р И М Е Р\r\n\r\n\r\n\r\n/*let UserRedirectComponent = AuthRedirectComponent(UsersAPIComponent); // П Р И М Е Р\r\n\r\nconst UsersContainer = connect( mapStateToProps, { // П Р И М Е Р\r\n    toUpdateUsers, changePage, setButtonPressed, getUsersThunkCreator, // П Р И М Е Р\r\n    newPageGetUsers, followThunkCreator, unFollowThunkCreator } )(UserRedirectComponent);*/ // П Р И М Е Р\r\n\r\n\r\n\r\nexport default compose(\r\n    connect( mapStateToProps, {\r\n        toUpdateUsers, changePage, setButtonPressed, getUsersThunkCreator,\r\n        newPageGetUsers, followThunkCreator} )\r\n)(UsersAPIComponent);"],"sourceRoot":""}